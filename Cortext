  CREATE OR REPLACE CORTEX SEARCH SERVICE product_line_search_service
  ON product_dimension
  WAREHOUSE = compute_wh
  TARGET_LAG = '1 hour'
  AS (
      SELECT DISTINCT name AS product_dimension FROM DIM_PRODUCT
  );


-- track costs
  SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.CORTEX_ANALYST_USAGE_HISTORY;


SELECT sum(credits), sum(request_count), sum(request_count)/sum(credits) as req_per_credit
FROM SNOWFLAKE.ACCOUNT_USAGE.CORTEX_ANALYST_USAGE_HISTORY
;


SELECT * FROM table(SNOWFLAKE.LOCAL.CORTEX_ANALYST_REQUESTS(
  
  semantic_model_name = '@GOLD.EV_STAR.YAML/file.yaml'
));


WITH __dim_city AS (
  SELECT
    city_id,
    name
  FROM gold.ev_star.dim_city
), __fact_transaction AS (
  SELECT
    city_id,
    model_id,
    value AS transaction_value
  FROM gold.ev_star.fact_transaction
), __dim_product AS (
  SELECT
    model_id,
    name
  FROM gold.ev_star.dim_product
), product_sales AS (
  SELECT
    f.city_id,
    SUM(f.transaction_value) AS total_sales
  FROM __fact_transaction AS f
  LEFT OUTER JOIN __dim_product AS p
    ON f.model_id = p.model_id
  WHERE
    p.name = 'Model X'
  GROUP BY
    f.city_id
)
SELECT
  c.name AS city_name,
  ps.total_sales
FROM product_sales AS ps
LEFT OUTER JOIN __dim_city AS c
  ON ps.city_id = c.city_id
ORDER BY
  ps.total_sales DESC NULLS LAST
LIMIT 1
 -- Generated by Cortex Analyst
;




CREATE OR REPLACE TABLE GOLD.EV_STAR.CHAT_HISTORY_RAW (
    USERNAME STRING,  -- Snowflake user
    chat_id STRING DEFAULT UUID_STRING(), -- Unique identifier for each chat session
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- When the message was added
    CHAT_DATA VARIANT -- Stores the JSON structure
);

    
CREATE OR REPLACE TABLE GOLD.EV_STAR.CHAT_HISTORY (
    username STRING,  -- Snowflake user
    chat_id STRING DEFAULT UUID_STRING(), -- Unique identifier for each chat session
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP, -- When the message was added
    user_message STRING, -- User input
    analyst_response STRING -- Analyst's response
);

select * from GOLD.EV_STAR.CHAT_HISTORY_RAW;
select * from GOLD.EV_STAR.CHAT_HISTORY;

-- truncate table GOLD.EV_STAR.CHAT_HISTORY;

   SELECT 
            chat_id,
            timestamp,
            user_message,
            analyst_response
        FROM GOLD.EV_STAR.CHAT_HISTORY
        WHERE username = 'RGARCIA'
        and user_message != 'What questions can I ask?'
        ORDER BY timestamp DESC;

